---
title: "Particle filter"
format: html
editor: visual
---

## Problem set

You will need the following packages

```{r}
#| message: false
library(tidyverse)
library(lubridate)
```

### Overview

This exercise involves the following objectives

1.  Modify the particle filter examples to apply to a new model. The model is defined as NIMBLE code so you have to convert to a particle filter.
2.  Use out put from a state-space model fit to initialize the particle filter
3.  Run the particle filter without observations to forecast
4.  Run the particle filter to assimilate new observations and forecast
5.  Evaluate how the forecast depends on data assimilation

#### Data

The data for this exercise is above biomass vs. age for a single forest plot. The data has two columns: age (in years) and biomass (in gC/m2)

#### Model

We are predicting the aboveground biomass using the following model

biomass = previous biomass + constant growth - mortality rate \* previous biomass

The constant growth is the parameter `g` below (in units of gC/m2/yr) and mortality rate is the parameter `u`below (proportion of biomass per year). We fit the model as a state-space model.

### Part 1: Fit model to historical data (Already done for you!)

This step is already done for you.

Here is the data for ages 1 through 50 for the plot (starting in 1950-01-01). It was measured every 5 years.

```{r}
plot_data <- read_csv("https://github.com/frec-5174/eco4cast-in-R-book/raw/main/data/PF_data1.csv", show_col_types = FALSE)
```

```{r}
#| warning: false
#| fig-cap: Time-series of forest biomass data
#| label: fig-biomass-timeseries
ggplot(plot_data, aes(x = datetime, y = biomass)) +
  geom_point() +
  labs(x = "age", y = "aboveground biomass (gC/m2)") +
  theme_bw()
```

The following model was used to estimate the posterior distributions of the parameters using a Bayesian framework.

```         
sim_dates <- seq(as_date("1950-01-01"), length.out = 50, by = "1 year")
biomass[1, ] <- 0

for(t in 2:length(sim_dates)){

  for(i in 1:num_particles){

    biomass_predicted <- biomass[t-1, i] + param$g - param$u * biomass[t-1, i]

    biomass[t, i] <- rnorm(1, mean = biomass_predicted , sd = param$sd_add)
  }
}
```

The MCMC chain has posterior distributions for the parameters (`g`, `u`, `sd_add`) and biomass at age 50 (`age50_biomass`)

```{r}
df <- read_csv("https://github.com/frec-5174/eco4cast-in-R-book/raw/main/data/PF_MCMC.csv", show_col_types = FALSE)
```

### Part 2: Forecast using PF

Now you will use the MCMC chain to determine the mean parameter values and the initial condition at age 50 for the particle filter.

Using the lecture material create a particle filter that uses the forest growth model to simulate the aboveground biomass of the forest for age 50 through 70.

#### Step 1: Set up PF

Following the code in the PF lecture set up the particle filter.

Instead of using data from a file you will use the following for your data: `obs <- NULL`

Be sure to:

-   use the mean values for `g`, `u`, and `sd_add` from the MCMC chain as the parameter values
-   use the distribution of the biomass at age 50 in the MCMC chain as your initial state for the PF
-   The standard deviation for the observations (`sd_data`) is 200.

```{r}
num_particles <- 25
num_time_steps <- 21

y <- array(NA, dim=c(length(num_time_steps), num_particles))

sd_init <- sd(df$age50_biomass)
sd_add <- mean(df$sd_add)
sd_obs <- 200

g.mean<-mean(df$g)
u.mean<-mean(df$u)

x <- array(NA, dim = c(num_time_steps, num_particles))
x_prior <- x 
x[1, ]<-sample(df$age50_biomass, num_particles, replace=T)
x_prior[1, ] <- x[1, ]
```

#### Step 2: Run particle filter

Write the code and run the particle filter based on the examples from the lecture. You will need to include the process model that is in the NIMBLE code above.

```{r}
### resampling bootstrap particle filter

for(t in 2:num_time_steps){
  
  ## forward step
  for(m in 1:num_particles){
    previousbiomass<-x[t - 1, m  ]
    newbiomass<- previousbiomass + g.mean - u.mean*previousbiomass 
    x[t, m ]<- newbiomass + rnorm(1, mean = 0, sd = sd_add)
  } 
  
  x_prior[t, ] <- x[t, ]
 
  # analysis step
   if(!is.na(y[t])){ 
       ## calculate Likelihood (weights)
       wt <- dnorm(y[t], mean = x[t, ], sd = sd_obs)    ## calculate likelihood (weight)
       
       wt_norm <- wt / sum(wt)
       
       ## resample ensemble members in proportion to their weight
       resample_index <- sample(1:num_particles, num_particles, replace = TRUE, prob = wt_norm) 
       
       x[t, ] <- x[t, resample_index]  ## update state
     }
}
```

#### Step 3: Visualize particle filter output

Generate a plot that visualizes the output of the PF (see examples from the lecture). Your plot must have age on the x-axis and biomass on the y-axis with different lines for the particles.

```{r}
xL<-tibble(time = 1:num_time_steps,
       as_tibble(x)) %>% 
  pivot_longer(cols = -time, names_to = "ensemble", values_to = "x")
xL$age50<-xL$time + 49

xL %>% 
  ggplot(aes(x = age50, y = x, group = factor(ensemble))) +
  geom_line(show.legend = F)+
  labs(x = "Age (years)", y = "Aboveground Biomass (gC/m2)") +
  theme_bw()+
  geom_hline(yintercept=6022, color="red")
```

#### Step 4: Save PF output

use this code to save your PF output as the object `initial_forecast`

```{r}
initial_forecast<-x
```

### Part 3:

Now we have new data!

```{r}
#| warning: false

new_data <- read_csv("https://github.com/frec-5174/eco4cast-in-R-book/raw/main/data/PF_data2.csv", show_col_types = FALSE)

ggplot(new_data, aes(x = datetime, y = biomass)) +
  geom_point() +
  labs(x = "age", y = "aboveground biomass (gC/m2)") +
  theme_bw()
```

#### Step 1: Repeat the PF setup

Using the new data, repeat the PF set up in Part 2 Step 1. You will be starting at age 50 just like above.

```{r}
num_particles <- 25
num_time_steps <- 21

sd_init <- sd(df$age50_biomass)
sd_add <- mean(df$sd_add)
sd_obs <- 200
g.mean<-mean(df$g)
u.mean<-mean(df$u)

y <- array(NA, dim=c(length(num_time_steps), num_particles))
y[c(6, 11)] <- new_data$biomass[c(6, 11)]

x <- array(NA, dim = c(num_time_steps, num_particles))
x_prior <- x 
x[1, ]<-sample(df$age50_biomass, num_particles, replace=T)
x_prior[1, ] <- x[1, ]
```

#### Step 2: Run particle filter using the new data

Using the new data, run the the PF again. This will be the same code as in Part 2 Step 2 (just copy and paste)

```{r}
for(t in 2:num_time_steps){
  
  ## forward step
  for(m in 1:num_particles){
    previousbiomass<-x[t - 1, m  ]
    newbiomass<- previousbiomass + g.mean - u.mean*previousbiomass 
    x[t, m ]<- newbiomass + rnorm(1, mean = 0, sd = sd_add)
  } 
  
  x_prior[t, ] <- x[t, ]
 
  # analysis step
   if(!is.na(y[t])){ 
       ## calculate Likelihood (weights)
       wt <- dnorm(y[t], mean = x[t, ], sd = sd_obs)    ## calculate likelihood (weight)
       
       wt_norm <- wt / sum(wt)
       
       ## resample ensemble members in proportion to their weight
       resample_index <- sample(1:num_particles, num_particles, replace = TRUE, prob = wt_norm) 
       
       x[t, ] <- x[t, resample_index]  ## update state
     }
}
```

#### Step 3: Visualize PF output

Generate a plot that visualizes the output of the PF (see examples from the lecture). Your plot must have age on the x-axis and biomass on the y-axis with different lines for the particles. Your observations from the new data must be on the plot.

```{r}
#| warning: false
xL<-tibble(time = 1:num_time_steps,
       as_tibble(x)) %>% 
  pivot_longer(cols = -time, names_to = "ensemble", values_to = "x")
xL$age50<-xL$time + 49

ggplot() +
  geom_line(data=xL, aes(x = age50, y = x, group = factor(ensemble)))+
  geom_point(data= new_data, aes(x=age, y=biomass))+
  labs(x = "Age (years)", y = "Aboveground Biomass (gC/m2)") +
  theme_bw()
```

#### Step 4: Save output

```{r}
assimilated_forecast<-x
```

### Part 4:

Combine the two PF forecast and evaluate how data assimilation influence the forecast of the last 10 years (age 60 to 70). Produce a plot with the mean and 90% CI for the initial_forecast and assimilated_forecast on the same plot. Include the observations from the new data set.

```{r}
#| warning: false
assimilated.df<-tibble(time = 1:num_time_steps,
       as_tibble(assimilated_forecast)) %>% 
  pivot_longer(cols = -time, names_to = "ensemble", values_to = "assimilated")

initial.df<-tibble(time = 1:num_time_steps,
       as_tibble(initial_forecast)) %>% 
  pivot_longer(cols = -time, names_to = "ensemble", values_to = "initial")

PF.forecasts.df<-left_join(assimilated.df, initial.df, by=c("time", "ensemble"))
PF.forecasts.df$age50<-PF.forecasts.df$time + 49


df.CI<-PF.forecasts.df %>% group_by(age50) %>% 
  summarise(mean.assimilated = mean(assimilated),
            upper.assimilated = quantile(assimilated, 0.95),
            lower.assimilated = quantile(assimilated, 0.05),
            mean.init = mean(initial), 
            upper.init = quantile(initial, 0.95), 
            lower.init = quantile(initial, 0.05))

df.CI %>% #filter(age50>=60) %>% 
  ggplot() +
  geom_line(aes(x = age50, y = mean.assimilated), color="blue")+
  geom_line(aes(x = age50, y = mean.init), color="red")+
  geom_ribbon(aes(x= age50, ymin = lower.assimilated, ymax = upper.assimilated), alpha = 0.2, fill="blue") +
  geom_ribbon(aes(x=age50, ymin = lower.init, ymax = upper.init), alpha = 0.2, fill="red") +
  geom_point(data= new_data, aes(x=age, y=biomass))+
  labs(x = "Age (years)", y = "Aboveground Biomass (gC/m2)") +
  theme_bw() + 
  geom_vline(xintercept=60, linetype=2)
```
Evaluation: At age 60, the particles and their 90% confidence intervals do not overlap because the observed data point is far below the biomass distribution at age 50. The model wants to return to that mean (around 6022 gC/m2), so the particles after data assimilation begin increasing towards age 70. 


### Part 5:

Question: How did assimilating data influence your forecast for ages 60 to 70? Consider both the mean and uncertainty in your answer.

Answer: Assimilating data lowered the particle mean because both data points were lower than the mean of the initial distribution at age 50. Both models want to maintain a mean of that initial value around 6022 gC/m2, so without assimilated data after age 60, both models trend toward that mean again. Therefore, the model confidence intervals overlap by the end of the forecast period, but the mean for the forecast with assimilated data is still lower than the initial forecast. By age 70, the upper quantile of the data-assimilated particles overlaps the lower quantile of the initial particles. 
At observed data points, the uncertainty in the data-assimilation forecast decreases, so forecast uncertainty increases from age 60 to 70. Conversely, the uncertainty of the initial model is relatively constant between ages 60 and 70 because there is no added information to increase certainty at any point in the forecast horizon. 
